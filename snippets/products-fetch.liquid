<div>
    <p id="initial-text" class="tw-hidden">{{ title }}</p>
    <button id="fire-fetch" class="tw-p-2 tw-bg-blue-500 tw-text-white">Fetch data...</button>
    <div id="loading" class="loading tw-text-center tw-mt-5 tw-hidden">Loading...</div>
    <div id="data-container" class="tw-flex tw-flex-wrap tw-flex-row"></div>
  </div>
  <script>
    document.addEventListener("DOMContentLoaded", (event) => {
      async function fetchAndDisplayData() {
        try {
          document.getElementById('loading').classList.remove('tw-hidden');
          document.getElementById('fire-fetch').classList.add('tw-hidden');
          document.getElementById('initial-text').classList.add('tw-hidden');
  
          const response = await fetch('https://jsonplaceholder.typicode.com/todos');
          const data = await response.json();
  
          const dataContainer = document.getElementById('data-container');
          dataContainer.innerHTML = '';
  
          const list = document.createElement('ul');
          list.classList.add('tw-flex');
          list.classList.add('tw-flex-wrap')
          list.classList.add('tw-list-none')
          for (let index = 0; index <  {{ number_items }}; index++) {
            let item = data[index];
            const truncatedTitle = item.title.split(' ').slice(0, 3).join(' ');
            const listItem = document.createElement('li');
            listItem.style.border = "solid"
            item.completed ? listItem.classList.add('tw-border-green-400') : listItem.classList.add('tw-border-red-400')
            listItem.innerHTML = `
              <div class="container tw-flex tw-flex-col tw-w-36 tw-h-36 tw-justify-between tw-p-4">
                <div class="text">
                  <span class="id tw-text-xs">#${item.id}</span>
                  <h3 class="title-cart tw-m-0 tw-font-semibold">${truncatedTitle} ...</h3>
                </div>
                <div class="text">
                  <span class="id tw-text-xs">${item.completed ? 'COMPLETED' : 'INCOMPLETE'} | User ID: ${item.userId}</span>
                </div>
              </div>
            `;
            list.appendChild(listItem);
          }
          dataContainer.appendChild(list);
  
          document.getElementById('loading').classList.add('tw-hidden');
        } catch (error) {
          console.error('Error:', error);
          document.getElementById('loading').classList.add('tw-hidden');
        }
      }
      document.getElementById("fire-fetch").addEventListener("click", fetchAndDisplayData);
    });
  </script>
  